if [ "$VERBOSE" == "False" ]; then
    # allow local debugging
    set -o xtrace
fi

NETWORKING_VHOST_VFIO_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )
VHOST_VFIO_REPO_ENABLE=$(trueorfalse True VHOST_VFIO_REPO_ENABLE)


if [ "${VHOST_VFIO_REPO_ENABLE}" == "True" ]; then

NEUTRON_REPO="https://github.com/intel-orchestration-software/neutron"
NEUTRON_BRANCH="vhost-vfio"

NOVA_REPO="https://github.com/intel-orchestration-software/nova"
NOVA_BRANCH="vhost-vfio"

LIBS_FROM_GIT="neutron-lib"
GITREPO["neutron-lib"]=${NEUTRON_LIB_REPO:-"https://github.com/intel-orchestration-software/neutron-lib"}
GITBRANCH["neutron-lib"]=${NEUTRON_LIB_BRANCH:-"vhost-vfio"}

fi

# name used by ovs l2 to set agent type in agent report.
# see https://github.com/intel-orchestration-software/neutron/blob/master/neutron/conf/plugins/ml2/drivers/ovs_conf.py#L141-L143
VHOST_VFIO_AGENT_TYPE=${VHOST_VFIO_AGENT_TYPE:-"ovs-vhost-vfio"}

if [ ! "$Q_ML2_PLUGIN_MECHANISM_DRIVERS" =~ "ovs-vhost-vfio" ]; then
    Q_ML2_PLUGIN_MECHANISM_DRIVERS += ",ovs-vhost-vfio"
fi

if [ "$VERBOSE" == "False" ]; then
    # turn off debugging again
    set +o xtrace
fi

NETWORKING_OVS_INSTALL=$(trueorfalse False NETWORKING_OVS_INSTALL)

# OVS installation
OVS_BIN_INSTALL=${OVS_BIN_INSTALL:-''}
OVS_REPO=${OVS_REPO:=''}
OVS_ALLOCATE_HUGEPAGES=${OVS_ALLOCATE_HUGEPAGES:-True}
OVS_HUGEPAGE_MOUNT=${OVS_HUGEPAGE_MOUNT:-/mnt/huge} 
OVS_HUGEPAGE_MOUNT_PAGESIZE=${OVS_HUGEPAGE_MOUNT_PAGESIZE:-''}
OVS_NUM_HUGEPAGES=${OVS_NUM_HUGEPAGES:-2048}

# IFC driver install settings
IFC_BIN_INSTALL=${IFC_BIN_INSTALL:-''}
IFC_REPO=${IFC_REPO:-''}

# Flow_driver install settings
FLOW_DRIVER_BIN_INSTALL=${FLOW_DRIVER_BIN_INSTALL:-''}
FLOW_DRIVER_REPO=${FLOW_DRIVER_REPO:-''}
